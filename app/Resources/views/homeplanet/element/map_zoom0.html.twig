
<table class="map hajust-square">
<tbody>
	{# Print Region #}
	{% for y in (gameview.location.getRegionY()+1)*13-1..(gameview.location.getRegionY())*13 %}
	<tr>
		{% for x in (gameview.location.getRegionX())*13..(gameview.location.getRegionX()+1)*13-1 %}
			{% set oTile = gameview.map.getTile( x, y ) %}
			<td class="" style="background-color: #{{ oTile.getColorHex() }}">
				{# draw city #}
				{% set city = gameview.city[ x~':'~y ]|default(null) %}
				{% if city != null %}
					<div class="map-cell sprite sprite-city"></div>
				{% endif %}
				{% set aPawn = gameview.game.getPawnAr_byLocation( oTile.getLocation() ) %}
				
				{% for oPawn in aPawn %}
					
					{% if oPawn.getType().getLabel() != 'city' %}
						<div class="map-cell sprite">P</div>
					{% endif %}
				{% endfor %}
				
				{% block map_cell %}
					{% if map_mod is defined %}
						<div class="map-cell" 
							data-location="{{ oTile.location }}"
							{{ (validator is defined and validator != null)? 
							'data-valid='~((validator.validate(oTile)?'true':'false'))~'' }}
						></div>
					{% else %}
						<a class="map-cell" href="?location={{ oTile.getLocation() }}">
						</a>
					{% endif %}
					
				{% endblock %}
			</td>
		{% endfor %}
	</tr>
	{% endfor %}
</tbody>
</table>